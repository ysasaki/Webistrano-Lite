#!perl
use strict;
use utf8;
use File::Spec::Functions qw(tmpdir catdir);
use File::Basename;
use lib File::Spec->catdir(dirname(__FILE__), '../lib');
use Plack::Builder;

use Webistrano::Lite::Web;
use Webistrano::Lite;
use Plack::Session::Store::File;
use Plack::Session::State::Cookie;
use URI::Escape;
use File::Path ();

my $session_dir = catdir(tmpdir, uri_escape("Webistrano::Lite") . "-$<" );
File::Path::mkpath($session_dir);
my $project_root_dir = catdir(dirname(__FILE__), '..');
my $app = builder {
    mount '/webistrano' => builder {
        enable 'Plack::Middleware::Static',
            path => qr{^(?:/static/)},
            root => catdir($project_root_dir);
        enable 'Plack::Middleware::Static',
            path => qr{^(?:/robots\.txt|/favicon\.ico)$},
            root => catdir($project_root_dir, 'static');
        enable 'Plack::Middleware::Assets::RailsLike',
            root => catdir($project_root_dir),
            search_path => [
                map { catdir($project_root_dir, @$_) } ( 
                    [qw(static js)],
                    [qw(static bootstrap js)],
                    [qw(static socket.io)],
                    [qw(static css)],
                    [qw(static bootstrap css)],
                )
            ],
            minify => 0; # TODO

        # If you want to run the app on multiple servers,
        # you need to use Plack::Sesion::Store::DBI or ::Store::Cache.
        enable 'Plack::Middleware::Session',
            store => Plack::Session::Store::File->new(
                dir => $session_dir,
            ),
            state => Plack::Session::State::Cookie->new(
                httponly => 1,
            );

        Webistrano::Lite::Web->to_app();
    };
};
unless (caller) {
    my $port        = 5000;
    my $host        = '127.0.0.1';
    my $max_workers = 4;

    require Getopt::Long;
    require Plack::Loader;
    my $p = Getopt::Long::Parser->new(
        config => [qw(posix_default no_ignore_case auto_help)]
    );
    $p->getoptions(
        'p|port=i'      => \$port,
        'host=s'      => \$host,
        'max-workers' => \$max_workers,
        'version!'    => \my $version,
        'c|config=s'  => \my $config_file,
    );
    if ($version) {
        print "Webistrano::Lite: $Webistrano::Lite::VERSION\n";
        exit 0;
    }
    if ($config_file) {
        my $config = do $config_file;
        Carp::croak("$config_file: $@") if $@;
        Carp::croak("$config_file: $!") unless defined $config;
        unless ( ref($config) eq 'HASH' ) {
            Carp::croak("$config_file does not return HashRef.");
        }
        no warnings 'redefine';
        *Webistrano::Lite::load_config = sub { $config }
    }

    print "Webistrano::Lite: http://${host}:${port}/\n";

    my $loader = Plack::Loader->load('Starlet',
        port        => $port,
        host        => $host,
        max_workers => $max_workers,
    );
    return $loader->run($app);
}
return $app;
